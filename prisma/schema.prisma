// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_account {
  id         Int        @id @default(autoincrement())
  first_name String     @db.VarChar(64)
  last_name  String     @db.VarChar(64)
  email      String     @unique @db.VarChar(64)
  password   String     @db.VarChar(128)
  mobile     String     @db.VarChar(32)
  address    String     @db.VarChar(64)
  favorite   favorite[]
  review     review[]
}

model product {
  id              Int        @id @default(autoincrement())
  name            String     @db.VarChar(64)
  department_name String     @db.VarChar(64)
  department      department @relation(fields: [department_name], references: [department], onDelete: Cascade, onUpdate: Cascade)
  image           String     @db.VarChar(64)
  price           Int
  category_name   String     @db.VarChar(64)
  category        category   @relation(fields: [category_name], references: [category], onDelete: Cascade, onUpdate: Cascade)
  quantity        Int
  description     String     @db.VarChar(2000)
  discount        Int
  favorite        favorite[]
  review          review[]
}

model department {
  id         Int       @id
  label      String    @db.VarChar(64)
  department String    @unique @db.VarChar(64)
  image      String    @db.VarChar(64)
  products   product[]
}

model category {
  id       Int       @id
  label    String    @db.VarChar(64)
  category String    @unique @db.VarChar(64)
  products product[]
}

model favorite {
  id         Int          @id
  user_id    Int
  user       user_account @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product_id Int
  product    product      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model review {
  id         Int          @id @default(autoincrement())
  user_id    Int
  user       user_account @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product_id Int
  product    product      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comment    String       @db.VarChar(500)
  rating     Int
}
